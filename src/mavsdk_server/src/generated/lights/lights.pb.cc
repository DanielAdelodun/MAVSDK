// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lights/lights.proto

#include "lights/lights.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace lights {

inline constexpr LightsResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::lights::LightsResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LightsResult::LightsResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LightsResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightsResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightsResultDefaultTypeInternal() {}
  union {
    LightsResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightsResultDefaultTypeInternal _LightsResult_default_instance_;

inline constexpr LightStrip::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lights_{},
        _lights_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LightStrip::LightStrip(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LightStripDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightStripDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightStripDefaultTypeInternal() {}
  union {
    LightStrip _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightStripDefaultTypeInternal _LightStrip_default_instance_;

inline constexpr FollowFlightModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FollowFlightModeRequest::FollowFlightModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FollowFlightModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FollowFlightModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FollowFlightModeRequestDefaultTypeInternal() {}
  union {
    FollowFlightModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FollowFlightModeRequestDefaultTypeInternal _FollowFlightModeRequest_default_instance_;

inline constexpr SetStripResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lights_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetStripResponse::SetStripResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetStripResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetStripResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetStripResponseDefaultTypeInternal() {}
  union {
    SetStripResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetStripResponseDefaultTypeInternal _SetStripResponse_default_instance_;

inline constexpr SetStripRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strip_colors_{nullptr},
        strip_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SetStripRequest::SetStripRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetStripRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetStripRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetStripRequestDefaultTypeInternal() {}
  union {
    SetStripRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetStripRequestDefaultTypeInternal _SetStripRequest_default_instance_;

inline constexpr SetMatrixResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lights_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetMatrixResponse::SetMatrixResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetMatrixResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMatrixResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMatrixResponseDefaultTypeInternal() {}
  union {
    SetMatrixResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMatrixResponseDefaultTypeInternal _SetMatrixResponse_default_instance_;

inline constexpr LightMatrix::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : strips_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LightMatrix::LightMatrix(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LightMatrixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightMatrixDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightMatrixDefaultTypeInternal() {}
  union {
    LightMatrix _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightMatrixDefaultTypeInternal _LightMatrix_default_instance_;

inline constexpr FollowFlightModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lights_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FollowFlightModeResponse::FollowFlightModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FollowFlightModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FollowFlightModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FollowFlightModeResponseDefaultTypeInternal() {}
  union {
    FollowFlightModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FollowFlightModeResponseDefaultTypeInternal _FollowFlightModeResponse_default_instance_;

inline constexpr SetMatrixRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matrix_colors_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetMatrixRequest::SetMatrixRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetMatrixRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMatrixRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMatrixRequestDefaultTypeInternal() {}
  union {
    SetMatrixRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMatrixRequestDefaultTypeInternal _SetMatrixRequest_default_instance_;
}  // namespace lights
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_lights_2flights_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_lights_2flights_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_lights_2flights_2eproto = nullptr;
const ::uint32_t TableStruct_lights_2flights_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixRequest, _impl_.matrix_colors_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetMatrixResponse, _impl_.lights_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripRequest, _impl_.strip_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripRequest, _impl_.strip_colors_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::SetStripResponse, _impl_.lights_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::FollowFlightModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::FollowFlightModeRequest, _impl_.enable_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::FollowFlightModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::FollowFlightModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::FollowFlightModeResponse, _impl_.lights_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightsResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightsResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightsResult, _impl_.result_str_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightStrip, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightStrip, _impl_.lights_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightMatrix, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lights::LightMatrix, _impl_.strips_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::lights::SetMatrixRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::lights::SetMatrixResponse)},
        {20, 30, -1, sizeof(::mavsdk::rpc::lights::SetStripRequest)},
        {32, 41, -1, sizeof(::mavsdk::rpc::lights::SetStripResponse)},
        {42, -1, -1, sizeof(::mavsdk::rpc::lights::FollowFlightModeRequest)},
        {51, 60, -1, sizeof(::mavsdk::rpc::lights::FollowFlightModeResponse)},
        {61, -1, -1, sizeof(::mavsdk::rpc::lights::LightsResult)},
        {71, -1, -1, sizeof(::mavsdk::rpc::lights::LightStrip)},
        {80, -1, -1, sizeof(::mavsdk::rpc::lights::LightMatrix)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::lights::_SetMatrixRequest_default_instance_._instance,
    &::mavsdk::rpc::lights::_SetMatrixResponse_default_instance_._instance,
    &::mavsdk::rpc::lights::_SetStripRequest_default_instance_._instance,
    &::mavsdk::rpc::lights::_SetStripResponse_default_instance_._instance,
    &::mavsdk::rpc::lights::_FollowFlightModeRequest_default_instance_._instance,
    &::mavsdk::rpc::lights::_FollowFlightModeResponse_default_instance_._instance,
    &::mavsdk::rpc::lights::_LightsResult_default_instance_._instance,
    &::mavsdk::rpc::lights::_LightStrip_default_instance_._instance,
    &::mavsdk::rpc::lights::_LightMatrix_default_instance_._instance,
};
const char descriptor_table_protodef_lights_2flights_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023lights/lights.proto\022\021mavsdk.rpc.lights"
    "\032\024mavsdk_options.proto\"I\n\020SetMatrixReque"
    "st\0225\n\rmatrix_colors\030\001 \001(\0132\036.mavsdk.rpc.l"
    "ights.LightMatrix\"K\n\021SetMatrixResponse\0226"
    "\n\rlights_result\030\001 \001(\0132\037.mavsdk.rpc.light"
    "s.LightsResult\"X\n\017SetStripRequest\022\020\n\010str"
    "ip_id\030\001 \001(\r\0223\n\014strip_colors\030\002 \001(\0132\035.mavs"
    "dk.rpc.lights.LightStrip\"J\n\020SetStripResp"
    "onse\0226\n\rlights_result\030\001 \001(\0132\037.mavsdk.rpc"
    ".lights.LightsResult\")\n\027FollowFlightMode"
    "Request\022\016\n\006enable\030\001 \001(\010\"R\n\030FollowFlightM"
    "odeResponse\0226\n\rlights_result\030\001 \001(\0132\037.mav"
    "sdk.rpc.lights.LightsResult\"\222\002\n\014LightsRe"
    "sult\0226\n\006result\030\001 \001(\0162&.mavsdk.rpc.lights"
    ".LightsResult.Result\022\022\n\nresult_str\030\002 \001(\t"
    "\"\265\001\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESUL"
    "T_SUCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RES"
    "ULT_CONNECTION_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004\022"
    "\030\n\024RESULT_OUT_OF_BOUNDS\020\005\022\022\n\016RESULT_TIME"
    "OUT\020\006\022\021\n\rRESULT_FAILED\020\007\"\034\n\nLightStrip\022\016"
    "\n\006lights\030\001 \003(\r\"<\n\013LightMatrix\022-\n\006strips\030"
    "\001 \003(\0132\035.mavsdk.rpc.lights.LightStrip2\273\002\n"
    "\rLightsService\022\\\n\tSetMatrix\022#.mavsdk.rpc"
    ".lights.SetMatrixRequest\032$.mavsdk.rpc.li"
    "ghts.SetMatrixResponse\"\004\200\265\030\001\022Y\n\010SetStrip"
    "\022\".mavsdk.rpc.lights.SetStripRequest\032#.m"
    "avsdk.rpc.lights.SetStripResponse\"\004\200\265\030\001\022"
    "q\n\020FollowFlightMode\022*.mavsdk.rpc.lights."
    "FollowFlightModeRequest\032+.mavsdk.rpc.lig"
    "hts.FollowFlightModeResponse\"\004\200\265\030\001B\037\n\020io"
    ".mavsdk.lightsB\013LightsProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_lights_2flights_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_lights_2flights_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_lights_2flights_2eproto = {
    false,
    false,
    1235,
    descriptor_table_protodef_lights_2flights_2eproto,
    "lights/lights.proto",
    &descriptor_table_lights_2flights_2eproto_once,
    descriptor_table_lights_2flights_2eproto_deps,
    1,
    9,
    schemas,
    file_default_instances,
    TableStruct_lights_2flights_2eproto::offsets,
    file_level_metadata_lights_2flights_2eproto,
    file_level_enum_descriptors_lights_2flights_2eproto,
    file_level_service_descriptors_lights_2flights_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_lights_2flights_2eproto_getter() {
  return &descriptor_table_lights_2flights_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_lights_2flights_2eproto(&descriptor_table_lights_2flights_2eproto);
namespace mavsdk {
namespace rpc {
namespace lights {
const ::google::protobuf::EnumDescriptor* LightsResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lights_2flights_2eproto);
  return file_level_enum_descriptors_lights_2flights_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LightsResult_Result_internal_data_[] = {
    524288u, 0u, };
bool LightsResult_Result_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LightsResult_Result LightsResult::RESULT_UNKNOWN;
constexpr LightsResult_Result LightsResult::RESULT_SUCCESS;
constexpr LightsResult_Result LightsResult::RESULT_NO_SYSTEM;
constexpr LightsResult_Result LightsResult::RESULT_CONNECTION_ERROR;
constexpr LightsResult_Result LightsResult::RESULT_BUSY;
constexpr LightsResult_Result LightsResult::RESULT_OUT_OF_BOUNDS;
constexpr LightsResult_Result LightsResult::RESULT_TIMEOUT;
constexpr LightsResult_Result LightsResult::RESULT_FAILED;
constexpr LightsResult_Result LightsResult::Result_MIN;
constexpr LightsResult_Result LightsResult::Result_MAX;
constexpr int LightsResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SetMatrixRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetMatrixRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetMatrixRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::lights::LightMatrix& matrix_colors(const SetMatrixRequest* msg);
  static void set_has_matrix_colors(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lights::LightMatrix& SetMatrixRequest::_Internal::matrix_colors(const SetMatrixRequest* msg) {
  return *msg->_impl_.matrix_colors_;
}
SetMatrixRequest::SetMatrixRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.SetMatrixRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetMatrixRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetMatrixRequest::SetMatrixRequest(
    ::google::protobuf::Arena* arena,
    const SetMatrixRequest& from)
    : ::google::protobuf::Message(arena) {
  SetMatrixRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.matrix_colors_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lights::LightMatrix>(arena, *from._impl_.matrix_colors_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.SetMatrixRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetMatrixRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetMatrixRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.matrix_colors_ = {};
}
SetMatrixRequest::~SetMatrixRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.SetMatrixRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetMatrixRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.matrix_colors_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetMatrixRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.SetMatrixRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.matrix_colors_ != nullptr);
    _impl_.matrix_colors_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetMatrixRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetMatrixRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetMatrixRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetMatrixRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetMatrixRequest, _impl_.matrix_colors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
    {PROTOBUF_FIELD_OFFSET(SetMatrixRequest, _impl_.matrix_colors_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightMatrix>()},
  }}, {{
  }},
};

::uint8_t* SetMatrixRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.SetMatrixRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::matrix_colors(this),
        _Internal::matrix_colors(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.SetMatrixRequest)
  return target;
}

::size_t SetMatrixRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.SetMatrixRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.matrix_colors_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetMatrixRequest::_class_data_ = {
    SetMatrixRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetMatrixRequest::GetClassData() const {
  return &_class_data_;
}

void SetMatrixRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetMatrixRequest*>(&to_msg);
  auto& from = static_cast<const SetMatrixRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.SetMatrixRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_matrix_colors()->::mavsdk::rpc::lights::LightMatrix::MergeFrom(
        from._internal_matrix_colors());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetMatrixRequest::CopyFrom(const SetMatrixRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.SetMatrixRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetMatrixRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetMatrixRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetMatrixRequest::InternalSwap(SetMatrixRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.matrix_colors_, other->_impl_.matrix_colors_);
}

::google::protobuf::Metadata SetMatrixRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[0]);
}
// ===================================================================

class SetMatrixResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetMatrixResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetMatrixResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::lights::LightsResult& lights_result(const SetMatrixResponse* msg);
  static void set_has_lights_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lights::LightsResult& SetMatrixResponse::_Internal::lights_result(const SetMatrixResponse* msg) {
  return *msg->_impl_.lights_result_;
}
SetMatrixResponse::SetMatrixResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.SetMatrixResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetMatrixResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetMatrixResponse::SetMatrixResponse(
    ::google::protobuf::Arena* arena,
    const SetMatrixResponse& from)
    : ::google::protobuf::Message(arena) {
  SetMatrixResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lights_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(arena, *from._impl_.lights_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.SetMatrixResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetMatrixResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetMatrixResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lights_result_ = {};
}
SetMatrixResponse::~SetMatrixResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.SetMatrixResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetMatrixResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lights_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetMatrixResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.SetMatrixResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lights_result_ != nullptr);
    _impl_.lights_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetMatrixResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetMatrixResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetMatrixResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetMatrixResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetMatrixResponse, _impl_.lights_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetMatrixResponse, _impl_.lights_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightsResult>()},
  }}, {{
  }},
};

::uint8_t* SetMatrixResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.SetMatrixResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lights_result(this),
        _Internal::lights_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.SetMatrixResponse)
  return target;
}

::size_t SetMatrixResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.SetMatrixResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lights_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetMatrixResponse::_class_data_ = {
    SetMatrixResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetMatrixResponse::GetClassData() const {
  return &_class_data_;
}

void SetMatrixResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetMatrixResponse*>(&to_msg);
  auto& from = static_cast<const SetMatrixResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.SetMatrixResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lights_result()->::mavsdk::rpc::lights::LightsResult::MergeFrom(
        from._internal_lights_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetMatrixResponse::CopyFrom(const SetMatrixResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.SetMatrixResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetMatrixResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetMatrixResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetMatrixResponse::InternalSwap(SetMatrixResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lights_result_, other->_impl_.lights_result_);
}

::google::protobuf::Metadata SetMatrixResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[1]);
}
// ===================================================================

class SetStripRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetStripRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::lights::LightStrip& strip_colors(const SetStripRequest* msg);
  static void set_has_strip_colors(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lights::LightStrip& SetStripRequest::_Internal::strip_colors(const SetStripRequest* msg) {
  return *msg->_impl_.strip_colors_;
}
SetStripRequest::SetStripRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.SetStripRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetStripRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetStripRequest::SetStripRequest(
    ::google::protobuf::Arena* arena,
    const SetStripRequest& from)
    : ::google::protobuf::Message(arena) {
  SetStripRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.strip_colors_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lights::LightStrip>(arena, *from._impl_.strip_colors_)
                : nullptr;
  _impl_.strip_id_ = from._impl_.strip_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.SetStripRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetStripRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetStripRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strip_colors_),
           0,
           offsetof(Impl_, strip_id_) -
               offsetof(Impl_, strip_colors_) +
               sizeof(Impl_::strip_id_));
}
SetStripRequest::~SetStripRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.SetStripRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetStripRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.strip_colors_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetStripRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.SetStripRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.strip_colors_ != nullptr);
    _impl_.strip_colors_->Clear();
  }
  _impl_.strip_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetStripRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SetStripRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetStripRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lights.LightStrip strip_colors = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_colors_)}},
    // uint32 strip_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetStripRequest, _impl_.strip_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 strip_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .mavsdk.rpc.lights.LightStrip strip_colors = 2;
    {PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_colors_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightStrip>()},
  }}, {{
  }},
};

::uint8_t* SetStripRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.SetStripRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 strip_id = 1;
  if (this->_internal_strip_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_strip_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lights.LightStrip strip_colors = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::strip_colors(this),
        _Internal::strip_colors(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.SetStripRequest)
  return target;
}

::size_t SetStripRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.SetStripRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lights.LightStrip strip_colors = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.strip_colors_);
  }

  // uint32 strip_id = 1;
  if (this->_internal_strip_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_strip_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetStripRequest::_class_data_ = {
    SetStripRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetStripRequest::GetClassData() const {
  return &_class_data_;
}

void SetStripRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetStripRequest*>(&to_msg);
  auto& from = static_cast<const SetStripRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.SetStripRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_strip_colors()->::mavsdk::rpc::lights::LightStrip::MergeFrom(
        from._internal_strip_colors());
  }
  if (from._internal_strip_id() != 0) {
    _this->_internal_set_strip_id(from._internal_strip_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetStripRequest::CopyFrom(const SetStripRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.SetStripRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetStripRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetStripRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetStripRequest::InternalSwap(SetStripRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_id_)
      + sizeof(SetStripRequest::_impl_.strip_id_)
      - PROTOBUF_FIELD_OFFSET(SetStripRequest, _impl_.strip_colors_)>(
          reinterpret_cast<char*>(&_impl_.strip_colors_),
          reinterpret_cast<char*>(&other->_impl_.strip_colors_));
}

::google::protobuf::Metadata SetStripRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[2]);
}
// ===================================================================

class SetStripResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetStripResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetStripResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::lights::LightsResult& lights_result(const SetStripResponse* msg);
  static void set_has_lights_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lights::LightsResult& SetStripResponse::_Internal::lights_result(const SetStripResponse* msg) {
  return *msg->_impl_.lights_result_;
}
SetStripResponse::SetStripResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.SetStripResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetStripResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetStripResponse::SetStripResponse(
    ::google::protobuf::Arena* arena,
    const SetStripResponse& from)
    : ::google::protobuf::Message(arena) {
  SetStripResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lights_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(arena, *from._impl_.lights_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.SetStripResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetStripResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetStripResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lights_result_ = {};
}
SetStripResponse::~SetStripResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.SetStripResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetStripResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lights_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetStripResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.SetStripResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lights_result_ != nullptr);
    _impl_.lights_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetStripResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetStripResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetStripResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetStripResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetStripResponse, _impl_.lights_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetStripResponse, _impl_.lights_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightsResult>()},
  }}, {{
  }},
};

::uint8_t* SetStripResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.SetStripResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lights_result(this),
        _Internal::lights_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.SetStripResponse)
  return target;
}

::size_t SetStripResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.SetStripResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lights_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetStripResponse::_class_data_ = {
    SetStripResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetStripResponse::GetClassData() const {
  return &_class_data_;
}

void SetStripResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetStripResponse*>(&to_msg);
  auto& from = static_cast<const SetStripResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.SetStripResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lights_result()->::mavsdk::rpc::lights::LightsResult::MergeFrom(
        from._internal_lights_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetStripResponse::CopyFrom(const SetStripResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.SetStripResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetStripResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetStripResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetStripResponse::InternalSwap(SetStripResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lights_result_, other->_impl_.lights_result_);
}

::google::protobuf::Metadata SetStripResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[3]);
}
// ===================================================================

class FollowFlightModeRequest::_Internal {
 public:
};

FollowFlightModeRequest::FollowFlightModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.FollowFlightModeRequest)
}
FollowFlightModeRequest::FollowFlightModeRequest(
    ::google::protobuf::Arena* arena, const FollowFlightModeRequest& from)
    : FollowFlightModeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FollowFlightModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FollowFlightModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.enable_ = {};
}
FollowFlightModeRequest::~FollowFlightModeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.FollowFlightModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FollowFlightModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FollowFlightModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.FollowFlightModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FollowFlightModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FollowFlightModeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FollowFlightModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool enable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FollowFlightModeRequest, _impl_.enable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FollowFlightModeRequest, _impl_.enable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable = 1;
    {PROTOBUF_FIELD_OFFSET(FollowFlightModeRequest, _impl_.enable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FollowFlightModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.FollowFlightModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.FollowFlightModeRequest)
  return target;
}

::size_t FollowFlightModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.FollowFlightModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FollowFlightModeRequest::_class_data_ = {
    FollowFlightModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FollowFlightModeRequest::GetClassData() const {
  return &_class_data_;
}

void FollowFlightModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FollowFlightModeRequest*>(&to_msg);
  auto& from = static_cast<const FollowFlightModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.FollowFlightModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FollowFlightModeRequest::CopyFrom(const FollowFlightModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.FollowFlightModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FollowFlightModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FollowFlightModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FollowFlightModeRequest::InternalSwap(FollowFlightModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.enable_, other->_impl_.enable_);
}

::google::protobuf::Metadata FollowFlightModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[4]);
}
// ===================================================================

class FollowFlightModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FollowFlightModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FollowFlightModeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::lights::LightsResult& lights_result(const FollowFlightModeResponse* msg);
  static void set_has_lights_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lights::LightsResult& FollowFlightModeResponse::_Internal::lights_result(const FollowFlightModeResponse* msg) {
  return *msg->_impl_.lights_result_;
}
FollowFlightModeResponse::FollowFlightModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.FollowFlightModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FollowFlightModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FollowFlightModeResponse::FollowFlightModeResponse(
    ::google::protobuf::Arena* arena,
    const FollowFlightModeResponse& from)
    : ::google::protobuf::Message(arena) {
  FollowFlightModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lights_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(arena, *from._impl_.lights_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.FollowFlightModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FollowFlightModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FollowFlightModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lights_result_ = {};
}
FollowFlightModeResponse::~FollowFlightModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.FollowFlightModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FollowFlightModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lights_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FollowFlightModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.FollowFlightModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lights_result_ != nullptr);
    _impl_.lights_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FollowFlightModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FollowFlightModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FollowFlightModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FollowFlightModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FollowFlightModeResponse, _impl_.lights_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lights.LightsResult lights_result = 1;
    {PROTOBUF_FIELD_OFFSET(FollowFlightModeResponse, _impl_.lights_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightsResult>()},
  }}, {{
  }},
};

::uint8_t* FollowFlightModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.FollowFlightModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lights_result(this),
        _Internal::lights_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.FollowFlightModeResponse)
  return target;
}

::size_t FollowFlightModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.FollowFlightModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lights_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FollowFlightModeResponse::_class_data_ = {
    FollowFlightModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FollowFlightModeResponse::GetClassData() const {
  return &_class_data_;
}

void FollowFlightModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FollowFlightModeResponse*>(&to_msg);
  auto& from = static_cast<const FollowFlightModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.FollowFlightModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lights_result()->::mavsdk::rpc::lights::LightsResult::MergeFrom(
        from._internal_lights_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FollowFlightModeResponse::CopyFrom(const FollowFlightModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.FollowFlightModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FollowFlightModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FollowFlightModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FollowFlightModeResponse::InternalSwap(FollowFlightModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lights_result_, other->_impl_.lights_result_);
}

::google::protobuf::Metadata FollowFlightModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[5]);
}
// ===================================================================

class LightsResult::_Internal {
 public:
};

LightsResult::LightsResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.LightsResult)
}
inline PROTOBUF_NDEBUG_INLINE LightsResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

LightsResult::LightsResult(
    ::google::protobuf::Arena* arena,
    const LightsResult& from)
    : ::google::protobuf::Message(arena) {
  LightsResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.LightsResult)
}
inline PROTOBUF_NDEBUG_INLINE LightsResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void LightsResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LightsResult::~LightsResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.LightsResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LightsResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LightsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.LightsResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LightsResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> LightsResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LightsResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LightsResult, _impl_.result_str_)}},
    // .mavsdk.rpc.lights.LightsResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightsResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LightsResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lights.LightsResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LightsResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(LightsResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\12\0\0\0\0\0"
    "mavsdk.rpc.lights.LightsResult"
    "result_str"
  }},
};

::uint8_t* LightsResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.LightsResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.lights.LightsResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.lights.LightsResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.LightsResult)
  return target;
}

::size_t LightsResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.LightsResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.lights.LightsResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LightsResult::_class_data_ = {
    LightsResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LightsResult::GetClassData() const {
  return &_class_data_;
}

void LightsResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LightsResult*>(&to_msg);
  auto& from = static_cast<const LightsResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.LightsResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightsResult::CopyFrom(const LightsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.LightsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LightsResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LightsResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LightsResult::InternalSwap(LightsResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata LightsResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[6]);
}
// ===================================================================

class LightStrip::_Internal {
 public:
};

LightStrip::LightStrip(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.LightStrip)
}
inline PROTOBUF_NDEBUG_INLINE LightStrip::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : lights_{visibility, arena, from.lights_},
        _lights_cached_byte_size_{0},
        _cached_size_{0} {}

LightStrip::LightStrip(
    ::google::protobuf::Arena* arena,
    const LightStrip& from)
    : ::google::protobuf::Message(arena) {
  LightStrip* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.LightStrip)
}
inline PROTOBUF_NDEBUG_INLINE LightStrip::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : lights_{visibility, arena},
        _lights_cached_byte_size_{0},
        _cached_size_{0} {}

inline void LightStrip::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LightStrip::~LightStrip() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.LightStrip)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LightStrip::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LightStrip::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.LightStrip)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lights_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LightStrip::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LightStrip::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LightStrip_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated uint32 lights = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LightStrip, _impl_.lights_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 lights = 1;
    {PROTOBUF_FIELD_OFFSET(LightStrip, _impl_.lights_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LightStrip::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.LightStrip)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 lights = 1;
  {
    int byte_size = _impl_._lights_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_lights(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.LightStrip)
  return target;
}

::size_t LightStrip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.LightStrip)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 lights = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_lights())
    ;
    _impl_._lights_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LightStrip::_class_data_ = {
    LightStrip::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LightStrip::GetClassData() const {
  return &_class_data_;
}

void LightStrip::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LightStrip*>(&to_msg);
  auto& from = static_cast<const LightStrip&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.LightStrip)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lights()->MergeFrom(from._internal_lights());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightStrip::CopyFrom(const LightStrip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.LightStrip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LightStrip::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LightStrip::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LightStrip::InternalSwap(LightStrip* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lights_.InternalSwap(&other->_impl_.lights_);
}

::google::protobuf::Metadata LightStrip::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[7]);
}
// ===================================================================

class LightMatrix::_Internal {
 public:
};

LightMatrix::LightMatrix(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lights.LightMatrix)
}
inline PROTOBUF_NDEBUG_INLINE LightMatrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : strips_{visibility, arena, from.strips_},
        _cached_size_{0} {}

LightMatrix::LightMatrix(
    ::google::protobuf::Arena* arena,
    const LightMatrix& from)
    : ::google::protobuf::Message(arena) {
  LightMatrix* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lights.LightMatrix)
}
inline PROTOBUF_NDEBUG_INLINE LightMatrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : strips_{visibility, arena},
        _cached_size_{0} {}

inline void LightMatrix::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LightMatrix::~LightMatrix() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lights.LightMatrix)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LightMatrix::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LightMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lights.LightMatrix)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.strips_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LightMatrix::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LightMatrix::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LightMatrix_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.lights.LightStrip strips = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LightMatrix, _impl_.strips_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.lights.LightStrip strips = 1;
    {PROTOBUF_FIELD_OFFSET(LightMatrix, _impl_.strips_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lights::LightStrip>()},
  }}, {{
  }},
};

::uint8_t* LightMatrix::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lights.LightMatrix)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .mavsdk.rpc.lights.LightStrip strips = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_strips_size()); i < n; i++) {
    const auto& repfield = this->_internal_strips().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lights.LightMatrix)
  return target;
}

::size_t LightMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lights.LightMatrix)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.lights.LightStrip strips = 1;
  total_size += 1UL * this->_internal_strips_size();
  for (const auto& msg : this->_internal_strips()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LightMatrix::_class_data_ = {
    LightMatrix::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LightMatrix::GetClassData() const {
  return &_class_data_;
}

void LightMatrix::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LightMatrix*>(&to_msg);
  auto& from = static_cast<const LightMatrix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lights.LightMatrix)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_strips()->MergeFrom(
      from._internal_strips());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightMatrix::CopyFrom(const LightMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lights.LightMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LightMatrix::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LightMatrix::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LightMatrix::InternalSwap(LightMatrix* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.strips_.InternalSwap(&other->_impl_.strips_);
}

::google::protobuf::Metadata LightMatrix::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lights_2flights_2eproto_getter, &descriptor_table_lights_2flights_2eproto_once,
      file_level_metadata_lights_2flights_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace lights
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
