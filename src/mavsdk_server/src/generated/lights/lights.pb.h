// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lights/lights.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_lights_2flights_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_lights_2flights_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_lights_2flights_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_lights_2flights_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_lights_2flights_2eproto;
namespace mavsdk {
namespace rpc {
namespace lights {
class FollowFlightModeRequest;
struct FollowFlightModeRequestDefaultTypeInternal;
extern FollowFlightModeRequestDefaultTypeInternal _FollowFlightModeRequest_default_instance_;
class FollowFlightModeResponse;
struct FollowFlightModeResponseDefaultTypeInternal;
extern FollowFlightModeResponseDefaultTypeInternal _FollowFlightModeResponse_default_instance_;
class LightMatrix;
struct LightMatrixDefaultTypeInternal;
extern LightMatrixDefaultTypeInternal _LightMatrix_default_instance_;
class LightStrip;
struct LightStripDefaultTypeInternal;
extern LightStripDefaultTypeInternal _LightStrip_default_instance_;
class LightsResult;
struct LightsResultDefaultTypeInternal;
extern LightsResultDefaultTypeInternal _LightsResult_default_instance_;
class SetMatrixRequest;
struct SetMatrixRequestDefaultTypeInternal;
extern SetMatrixRequestDefaultTypeInternal _SetMatrixRequest_default_instance_;
class SetMatrixResponse;
struct SetMatrixResponseDefaultTypeInternal;
extern SetMatrixResponseDefaultTypeInternal _SetMatrixResponse_default_instance_;
class SetStripRequest;
struct SetStripRequestDefaultTypeInternal;
extern SetStripRequestDefaultTypeInternal _SetStripRequest_default_instance_;
class SetStripResponse;
struct SetStripResponseDefaultTypeInternal;
extern SetStripResponseDefaultTypeInternal _SetStripResponse_default_instance_;
}  // namespace lights
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace lights {
enum LightsResult_Result : int {
  LightsResult_Result_RESULT_UNKNOWN = 0,
  LightsResult_Result_RESULT_SUCCESS = 1,
  LightsResult_Result_RESULT_NO_SYSTEM = 2,
  LightsResult_Result_RESULT_CONNECTION_ERROR = 3,
  LightsResult_Result_RESULT_BUSY = 4,
  LightsResult_Result_RESULT_OUT_OF_BOUNDS = 5,
  LightsResult_Result_RESULT_TIMEOUT = 6,
  LightsResult_Result_RESULT_FAILED = 7,
  LightsResult_Result_LightsResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LightsResult_Result_LightsResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LightsResult_Result_IsValid(int value);
extern const uint32_t LightsResult_Result_internal_data_[];
constexpr LightsResult_Result LightsResult_Result_Result_MIN = static_cast<LightsResult_Result>(0);
constexpr LightsResult_Result LightsResult_Result_Result_MAX = static_cast<LightsResult_Result>(7);
constexpr int LightsResult_Result_Result_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
LightsResult_Result_descriptor();
template <typename T>
const std::string& LightsResult_Result_Name(T value) {
  static_assert(std::is_same<T, LightsResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return LightsResult_Result_Name(static_cast<LightsResult_Result>(value));
}
template <>
inline const std::string& LightsResult_Result_Name(LightsResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LightsResult_Result_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool LightsResult_Result_Parse(absl::string_view name, LightsResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LightsResult_Result>(
      LightsResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class LightsResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.LightsResult) */ {
 public:
  inline LightsResult() : LightsResult(nullptr) {}
  ~LightsResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LightsResult(::google::protobuf::internal::ConstantInitialized);

  inline LightsResult(const LightsResult& from)
      : LightsResult(nullptr, from) {}
  LightsResult(LightsResult&& from) noexcept
    : LightsResult() {
    *this = ::std::move(from);
  }

  inline LightsResult& operator=(const LightsResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightsResult& operator=(LightsResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightsResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightsResult* internal_default_instance() {
    return reinterpret_cast<const LightsResult*>(
               &_LightsResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(LightsResult& a, LightsResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LightsResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightsResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightsResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LightsResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightsResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LightsResult& from) {
    LightsResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightsResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.LightsResult";
  }
  protected:
  explicit LightsResult(::google::protobuf::Arena* arena);
  LightsResult(::google::protobuf::Arena* arena, const LightsResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = LightsResult_Result;
  static constexpr Result RESULT_UNKNOWN = LightsResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = LightsResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = LightsResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_CONNECTION_ERROR = LightsResult_Result_RESULT_CONNECTION_ERROR;
  static constexpr Result RESULT_BUSY = LightsResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_OUT_OF_BOUNDS = LightsResult_Result_RESULT_OUT_OF_BOUNDS;
  static constexpr Result RESULT_TIMEOUT = LightsResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_FAILED = LightsResult_Result_RESULT_FAILED;
  static inline bool Result_IsValid(int value) {
    return LightsResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = LightsResult_Result_Result_MIN;
  static constexpr Result Result_MAX = LightsResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = LightsResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return LightsResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return LightsResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return LightsResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.lights.LightsResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::lights::LightsResult_Result result() const;
  void set_result(::mavsdk::rpc::lights::LightsResult_Result value);

  private:
  ::mavsdk::rpc::lights::LightsResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::lights::LightsResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.LightsResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class LightStrip final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.LightStrip) */ {
 public:
  inline LightStrip() : LightStrip(nullptr) {}
  ~LightStrip() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LightStrip(::google::protobuf::internal::ConstantInitialized);

  inline LightStrip(const LightStrip& from)
      : LightStrip(nullptr, from) {}
  LightStrip(LightStrip&& from) noexcept
    : LightStrip() {
    *this = ::std::move(from);
  }

  inline LightStrip& operator=(const LightStrip& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightStrip& operator=(LightStrip&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightStrip& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightStrip* internal_default_instance() {
    return reinterpret_cast<const LightStrip*>(
               &_LightStrip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LightStrip& a, LightStrip& b) {
    a.Swap(&b);
  }
  inline void Swap(LightStrip* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightStrip* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightStrip* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LightStrip>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightStrip& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LightStrip& from) {
    LightStrip::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightStrip* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.LightStrip";
  }
  protected:
  explicit LightStrip(::google::protobuf::Arena* arena);
  LightStrip(::google::protobuf::Arena* arena, const LightStrip& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLightsFieldNumber = 1,
  };
  // repeated uint32 lights = 1;
  int lights_size() const;
  private:
  int _internal_lights_size() const;

  public:
  void clear_lights() ;
  ::uint32_t lights(int index) const;
  void set_lights(int index, ::uint32_t value);
  void add_lights(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& lights() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_lights();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_lights() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_lights();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.LightStrip)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> lights_;
    mutable ::google::protobuf::internal::CachedSize _lights_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class FollowFlightModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.FollowFlightModeRequest) */ {
 public:
  inline FollowFlightModeRequest() : FollowFlightModeRequest(nullptr) {}
  ~FollowFlightModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FollowFlightModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline FollowFlightModeRequest(const FollowFlightModeRequest& from)
      : FollowFlightModeRequest(nullptr, from) {}
  FollowFlightModeRequest(FollowFlightModeRequest&& from) noexcept
    : FollowFlightModeRequest() {
    *this = ::std::move(from);
  }

  inline FollowFlightModeRequest& operator=(const FollowFlightModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FollowFlightModeRequest& operator=(FollowFlightModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FollowFlightModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FollowFlightModeRequest* internal_default_instance() {
    return reinterpret_cast<const FollowFlightModeRequest*>(
               &_FollowFlightModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FollowFlightModeRequest& a, FollowFlightModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FollowFlightModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FollowFlightModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FollowFlightModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FollowFlightModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FollowFlightModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FollowFlightModeRequest& from) {
    FollowFlightModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FollowFlightModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.FollowFlightModeRequest";
  }
  protected:
  explicit FollowFlightModeRequest(::google::protobuf::Arena* arena);
  FollowFlightModeRequest(::google::protobuf::Arena* arena, const FollowFlightModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
  };
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.FollowFlightModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool enable_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class SetStripResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.SetStripResponse) */ {
 public:
  inline SetStripResponse() : SetStripResponse(nullptr) {}
  ~SetStripResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetStripResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetStripResponse(const SetStripResponse& from)
      : SetStripResponse(nullptr, from) {}
  SetStripResponse(SetStripResponse&& from) noexcept
    : SetStripResponse() {
    *this = ::std::move(from);
  }

  inline SetStripResponse& operator=(const SetStripResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetStripResponse& operator=(SetStripResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetStripResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetStripResponse* internal_default_instance() {
    return reinterpret_cast<const SetStripResponse*>(
               &_SetStripResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetStripResponse& a, SetStripResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetStripResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetStripResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetStripResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetStripResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetStripResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetStripResponse& from) {
    SetStripResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetStripResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.SetStripResponse";
  }
  protected:
  explicit SetStripResponse(::google::protobuf::Arena* arena);
  SetStripResponse(::google::protobuf::Arena* arena, const SetStripResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLightsResultFieldNumber = 1,
  };
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  bool has_lights_result() const;
  void clear_lights_result() ;
  const ::mavsdk::rpc::lights::LightsResult& lights_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lights::LightsResult* release_lights_result();
  ::mavsdk::rpc::lights::LightsResult* mutable_lights_result();
  void set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  void unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  ::mavsdk::rpc::lights::LightsResult* unsafe_arena_release_lights_result();

  private:
  const ::mavsdk::rpc::lights::LightsResult& _internal_lights_result() const;
  ::mavsdk::rpc::lights::LightsResult* _internal_mutable_lights_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.SetStripResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lights::LightsResult* lights_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class SetStripRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.SetStripRequest) */ {
 public:
  inline SetStripRequest() : SetStripRequest(nullptr) {}
  ~SetStripRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetStripRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetStripRequest(const SetStripRequest& from)
      : SetStripRequest(nullptr, from) {}
  SetStripRequest(SetStripRequest&& from) noexcept
    : SetStripRequest() {
    *this = ::std::move(from);
  }

  inline SetStripRequest& operator=(const SetStripRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetStripRequest& operator=(SetStripRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetStripRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetStripRequest* internal_default_instance() {
    return reinterpret_cast<const SetStripRequest*>(
               &_SetStripRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetStripRequest& a, SetStripRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetStripRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetStripRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetStripRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetStripRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetStripRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetStripRequest& from) {
    SetStripRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetStripRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.SetStripRequest";
  }
  protected:
  explicit SetStripRequest(::google::protobuf::Arena* arena);
  SetStripRequest(::google::protobuf::Arena* arena, const SetStripRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStripColorsFieldNumber = 2,
    kStripIdFieldNumber = 1,
  };
  // .mavsdk.rpc.lights.LightStrip strip_colors = 2;
  bool has_strip_colors() const;
  void clear_strip_colors() ;
  const ::mavsdk::rpc::lights::LightStrip& strip_colors() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lights::LightStrip* release_strip_colors();
  ::mavsdk::rpc::lights::LightStrip* mutable_strip_colors();
  void set_allocated_strip_colors(::mavsdk::rpc::lights::LightStrip* value);
  void unsafe_arena_set_allocated_strip_colors(::mavsdk::rpc::lights::LightStrip* value);
  ::mavsdk::rpc::lights::LightStrip* unsafe_arena_release_strip_colors();

  private:
  const ::mavsdk::rpc::lights::LightStrip& _internal_strip_colors() const;
  ::mavsdk::rpc::lights::LightStrip* _internal_mutable_strip_colors();

  public:
  // uint32 strip_id = 1;
  void clear_strip_id() ;
  ::uint32_t strip_id() const;
  void set_strip_id(::uint32_t value);

  private:
  ::uint32_t _internal_strip_id() const;
  void _internal_set_strip_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.SetStripRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lights::LightStrip* strip_colors_;
    ::uint32_t strip_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class SetMatrixResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.SetMatrixResponse) */ {
 public:
  inline SetMatrixResponse() : SetMatrixResponse(nullptr) {}
  ~SetMatrixResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMatrixResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetMatrixResponse(const SetMatrixResponse& from)
      : SetMatrixResponse(nullptr, from) {}
  SetMatrixResponse(SetMatrixResponse&& from) noexcept
    : SetMatrixResponse() {
    *this = ::std::move(from);
  }

  inline SetMatrixResponse& operator=(const SetMatrixResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMatrixResponse& operator=(SetMatrixResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMatrixResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMatrixResponse* internal_default_instance() {
    return reinterpret_cast<const SetMatrixResponse*>(
               &_SetMatrixResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetMatrixResponse& a, SetMatrixResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMatrixResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMatrixResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMatrixResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMatrixResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMatrixResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMatrixResponse& from) {
    SetMatrixResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetMatrixResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.SetMatrixResponse";
  }
  protected:
  explicit SetMatrixResponse(::google::protobuf::Arena* arena);
  SetMatrixResponse(::google::protobuf::Arena* arena, const SetMatrixResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLightsResultFieldNumber = 1,
  };
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  bool has_lights_result() const;
  void clear_lights_result() ;
  const ::mavsdk::rpc::lights::LightsResult& lights_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lights::LightsResult* release_lights_result();
  ::mavsdk::rpc::lights::LightsResult* mutable_lights_result();
  void set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  void unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  ::mavsdk::rpc::lights::LightsResult* unsafe_arena_release_lights_result();

  private:
  const ::mavsdk::rpc::lights::LightsResult& _internal_lights_result() const;
  ::mavsdk::rpc::lights::LightsResult* _internal_mutable_lights_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.SetMatrixResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lights::LightsResult* lights_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class LightMatrix final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.LightMatrix) */ {
 public:
  inline LightMatrix() : LightMatrix(nullptr) {}
  ~LightMatrix() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LightMatrix(::google::protobuf::internal::ConstantInitialized);

  inline LightMatrix(const LightMatrix& from)
      : LightMatrix(nullptr, from) {}
  LightMatrix(LightMatrix&& from) noexcept
    : LightMatrix() {
    *this = ::std::move(from);
  }

  inline LightMatrix& operator=(const LightMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightMatrix& operator=(LightMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightMatrix* internal_default_instance() {
    return reinterpret_cast<const LightMatrix*>(
               &_LightMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(LightMatrix& a, LightMatrix& b) {
    a.Swap(&b);
  }
  inline void Swap(LightMatrix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightMatrix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightMatrix* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LightMatrix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightMatrix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LightMatrix& from) {
    LightMatrix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightMatrix* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.LightMatrix";
  }
  protected:
  explicit LightMatrix(::google::protobuf::Arena* arena);
  LightMatrix(::google::protobuf::Arena* arena, const LightMatrix& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStripsFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.lights.LightStrip strips = 1;
  int strips_size() const;
  private:
  int _internal_strips_size() const;

  public:
  void clear_strips() ;
  ::mavsdk::rpc::lights::LightStrip* mutable_strips(int index);
  ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::lights::LightStrip >*
      mutable_strips();
  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>& _internal_strips() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>* _internal_mutable_strips();
  public:
  const ::mavsdk::rpc::lights::LightStrip& strips(int index) const;
  ::mavsdk::rpc::lights::LightStrip* add_strips();
  const ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::lights::LightStrip >&
      strips() const;
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.LightMatrix)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::lights::LightStrip > strips_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class FollowFlightModeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.FollowFlightModeResponse) */ {
 public:
  inline FollowFlightModeResponse() : FollowFlightModeResponse(nullptr) {}
  ~FollowFlightModeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FollowFlightModeResponse(::google::protobuf::internal::ConstantInitialized);

  inline FollowFlightModeResponse(const FollowFlightModeResponse& from)
      : FollowFlightModeResponse(nullptr, from) {}
  FollowFlightModeResponse(FollowFlightModeResponse&& from) noexcept
    : FollowFlightModeResponse() {
    *this = ::std::move(from);
  }

  inline FollowFlightModeResponse& operator=(const FollowFlightModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FollowFlightModeResponse& operator=(FollowFlightModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FollowFlightModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FollowFlightModeResponse* internal_default_instance() {
    return reinterpret_cast<const FollowFlightModeResponse*>(
               &_FollowFlightModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FollowFlightModeResponse& a, FollowFlightModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FollowFlightModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FollowFlightModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FollowFlightModeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FollowFlightModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FollowFlightModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FollowFlightModeResponse& from) {
    FollowFlightModeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FollowFlightModeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.FollowFlightModeResponse";
  }
  protected:
  explicit FollowFlightModeResponse(::google::protobuf::Arena* arena);
  FollowFlightModeResponse(::google::protobuf::Arena* arena, const FollowFlightModeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLightsResultFieldNumber = 1,
  };
  // .mavsdk.rpc.lights.LightsResult lights_result = 1;
  bool has_lights_result() const;
  void clear_lights_result() ;
  const ::mavsdk::rpc::lights::LightsResult& lights_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lights::LightsResult* release_lights_result();
  ::mavsdk::rpc::lights::LightsResult* mutable_lights_result();
  void set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  void unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value);
  ::mavsdk::rpc::lights::LightsResult* unsafe_arena_release_lights_result();

  private:
  const ::mavsdk::rpc::lights::LightsResult& _internal_lights_result() const;
  ::mavsdk::rpc::lights::LightsResult* _internal_mutable_lights_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.FollowFlightModeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lights::LightsResult* lights_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};// -------------------------------------------------------------------

class SetMatrixRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lights.SetMatrixRequest) */ {
 public:
  inline SetMatrixRequest() : SetMatrixRequest(nullptr) {}
  ~SetMatrixRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMatrixRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetMatrixRequest(const SetMatrixRequest& from)
      : SetMatrixRequest(nullptr, from) {}
  SetMatrixRequest(SetMatrixRequest&& from) noexcept
    : SetMatrixRequest() {
    *this = ::std::move(from);
  }

  inline SetMatrixRequest& operator=(const SetMatrixRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMatrixRequest& operator=(SetMatrixRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMatrixRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMatrixRequest* internal_default_instance() {
    return reinterpret_cast<const SetMatrixRequest*>(
               &_SetMatrixRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetMatrixRequest& a, SetMatrixRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMatrixRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMatrixRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMatrixRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMatrixRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMatrixRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMatrixRequest& from) {
    SetMatrixRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetMatrixRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lights.SetMatrixRequest";
  }
  protected:
  explicit SetMatrixRequest(::google::protobuf::Arena* arena);
  SetMatrixRequest(::google::protobuf::Arena* arena, const SetMatrixRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatrixColorsFieldNumber = 1,
  };
  // .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
  bool has_matrix_colors() const;
  void clear_matrix_colors() ;
  const ::mavsdk::rpc::lights::LightMatrix& matrix_colors() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lights::LightMatrix* release_matrix_colors();
  ::mavsdk::rpc::lights::LightMatrix* mutable_matrix_colors();
  void set_allocated_matrix_colors(::mavsdk::rpc::lights::LightMatrix* value);
  void unsafe_arena_set_allocated_matrix_colors(::mavsdk::rpc::lights::LightMatrix* value);
  ::mavsdk::rpc::lights::LightMatrix* unsafe_arena_release_matrix_colors();

  private:
  const ::mavsdk::rpc::lights::LightMatrix& _internal_matrix_colors() const;
  ::mavsdk::rpc::lights::LightMatrix* _internal_mutable_matrix_colors();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lights.SetMatrixRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lights::LightMatrix* matrix_colors_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lights_2flights_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetMatrixRequest

// .mavsdk.rpc.lights.LightMatrix matrix_colors = 1;
inline bool SetMatrixRequest::has_matrix_colors() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.matrix_colors_ != nullptr);
  return value;
}
inline void SetMatrixRequest::clear_matrix_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.matrix_colors_ != nullptr) _impl_.matrix_colors_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lights::LightMatrix& SetMatrixRequest::_internal_matrix_colors() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lights::LightMatrix* p = _impl_.matrix_colors_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lights::LightMatrix&>(::mavsdk::rpc::lights::_LightMatrix_default_instance_);
}
inline const ::mavsdk::rpc::lights::LightMatrix& SetMatrixRequest::matrix_colors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.SetMatrixRequest.matrix_colors)
  return _internal_matrix_colors();
}
inline void SetMatrixRequest::unsafe_arena_set_allocated_matrix_colors(::mavsdk::rpc::lights::LightMatrix* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.matrix_colors_);
  }
  _impl_.matrix_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightMatrix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lights.SetMatrixRequest.matrix_colors)
}
inline ::mavsdk::rpc::lights::LightMatrix* SetMatrixRequest::release_matrix_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightMatrix* released = _impl_.matrix_colors_;
  _impl_.matrix_colors_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lights::LightMatrix* SetMatrixRequest::unsafe_arena_release_matrix_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.SetMatrixRequest.matrix_colors)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightMatrix* temp = _impl_.matrix_colors_;
  _impl_.matrix_colors_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lights::LightMatrix* SetMatrixRequest::_internal_mutable_matrix_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.matrix_colors_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lights::LightMatrix>(GetArena());
    _impl_.matrix_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightMatrix*>(p);
  }
  return _impl_.matrix_colors_;
}
inline ::mavsdk::rpc::lights::LightMatrix* SetMatrixRequest::mutable_matrix_colors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lights::LightMatrix* _msg = _internal_mutable_matrix_colors();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.SetMatrixRequest.matrix_colors)
  return _msg;
}
inline void SetMatrixRequest::set_allocated_matrix_colors(::mavsdk::rpc::lights::LightMatrix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lights::LightMatrix*>(_impl_.matrix_colors_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lights::LightMatrix*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.matrix_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightMatrix*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.SetMatrixRequest.matrix_colors)
}

// -------------------------------------------------------------------

// SetMatrixResponse

// .mavsdk.rpc.lights.LightsResult lights_result = 1;
inline bool SetMatrixResponse::has_lights_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lights_result_ != nullptr);
  return value;
}
inline void SetMatrixResponse::clear_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lights_result_ != nullptr) _impl_.lights_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lights::LightsResult& SetMatrixResponse::_internal_lights_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lights::LightsResult* p = _impl_.lights_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lights::LightsResult&>(::mavsdk::rpc::lights::_LightsResult_default_instance_);
}
inline const ::mavsdk::rpc::lights::LightsResult& SetMatrixResponse::lights_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.SetMatrixResponse.lights_result)
  return _internal_lights_result();
}
inline void SetMatrixResponse::unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lights_result_);
  }
  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lights.SetMatrixResponse.lights_result)
}
inline ::mavsdk::rpc::lights::LightsResult* SetMatrixResponse::release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* released = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lights::LightsResult* SetMatrixResponse::unsafe_arena_release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.SetMatrixResponse.lights_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* temp = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lights::LightsResult* SetMatrixResponse::_internal_mutable_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lights_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(GetArena());
    _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(p);
  }
  return _impl_.lights_result_;
}
inline ::mavsdk::rpc::lights::LightsResult* SetMatrixResponse::mutable_lights_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lights::LightsResult* _msg = _internal_mutable_lights_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.SetMatrixResponse.lights_result)
  return _msg;
}
inline void SetMatrixResponse::set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(_impl_.lights_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.SetMatrixResponse.lights_result)
}

// -------------------------------------------------------------------

// SetStripRequest

// uint32 strip_id = 1;
inline void SetStripRequest::clear_strip_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.strip_id_ = 0u;
}
inline ::uint32_t SetStripRequest::strip_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.SetStripRequest.strip_id)
  return _internal_strip_id();
}
inline void SetStripRequest::set_strip_id(::uint32_t value) {
  _internal_set_strip_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lights.SetStripRequest.strip_id)
}
inline ::uint32_t SetStripRequest::_internal_strip_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.strip_id_;
}
inline void SetStripRequest::_internal_set_strip_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.strip_id_ = value;
}

// .mavsdk.rpc.lights.LightStrip strip_colors = 2;
inline bool SetStripRequest::has_strip_colors() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.strip_colors_ != nullptr);
  return value;
}
inline void SetStripRequest::clear_strip_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.strip_colors_ != nullptr) _impl_.strip_colors_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lights::LightStrip& SetStripRequest::_internal_strip_colors() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lights::LightStrip* p = _impl_.strip_colors_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lights::LightStrip&>(::mavsdk::rpc::lights::_LightStrip_default_instance_);
}
inline const ::mavsdk::rpc::lights::LightStrip& SetStripRequest::strip_colors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.SetStripRequest.strip_colors)
  return _internal_strip_colors();
}
inline void SetStripRequest::unsafe_arena_set_allocated_strip_colors(::mavsdk::rpc::lights::LightStrip* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.strip_colors_);
  }
  _impl_.strip_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightStrip*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lights.SetStripRequest.strip_colors)
}
inline ::mavsdk::rpc::lights::LightStrip* SetStripRequest::release_strip_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightStrip* released = _impl_.strip_colors_;
  _impl_.strip_colors_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lights::LightStrip* SetStripRequest::unsafe_arena_release_strip_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.SetStripRequest.strip_colors)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightStrip* temp = _impl_.strip_colors_;
  _impl_.strip_colors_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lights::LightStrip* SetStripRequest::_internal_mutable_strip_colors() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.strip_colors_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lights::LightStrip>(GetArena());
    _impl_.strip_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightStrip*>(p);
  }
  return _impl_.strip_colors_;
}
inline ::mavsdk::rpc::lights::LightStrip* SetStripRequest::mutable_strip_colors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lights::LightStrip* _msg = _internal_mutable_strip_colors();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.SetStripRequest.strip_colors)
  return _msg;
}
inline void SetStripRequest::set_allocated_strip_colors(::mavsdk::rpc::lights::LightStrip* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lights::LightStrip*>(_impl_.strip_colors_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lights::LightStrip*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.strip_colors_ = reinterpret_cast<::mavsdk::rpc::lights::LightStrip*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.SetStripRequest.strip_colors)
}

// -------------------------------------------------------------------

// SetStripResponse

// .mavsdk.rpc.lights.LightsResult lights_result = 1;
inline bool SetStripResponse::has_lights_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lights_result_ != nullptr);
  return value;
}
inline void SetStripResponse::clear_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lights_result_ != nullptr) _impl_.lights_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lights::LightsResult& SetStripResponse::_internal_lights_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lights::LightsResult* p = _impl_.lights_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lights::LightsResult&>(::mavsdk::rpc::lights::_LightsResult_default_instance_);
}
inline const ::mavsdk::rpc::lights::LightsResult& SetStripResponse::lights_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.SetStripResponse.lights_result)
  return _internal_lights_result();
}
inline void SetStripResponse::unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lights_result_);
  }
  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lights.SetStripResponse.lights_result)
}
inline ::mavsdk::rpc::lights::LightsResult* SetStripResponse::release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* released = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lights::LightsResult* SetStripResponse::unsafe_arena_release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.SetStripResponse.lights_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* temp = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lights::LightsResult* SetStripResponse::_internal_mutable_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lights_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(GetArena());
    _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(p);
  }
  return _impl_.lights_result_;
}
inline ::mavsdk::rpc::lights::LightsResult* SetStripResponse::mutable_lights_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lights::LightsResult* _msg = _internal_mutable_lights_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.SetStripResponse.lights_result)
  return _msg;
}
inline void SetStripResponse::set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(_impl_.lights_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.SetStripResponse.lights_result)
}

// -------------------------------------------------------------------

// FollowFlightModeRequest

// bool enable = 1;
inline void FollowFlightModeRequest::clear_enable() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.enable_ = false;
}
inline bool FollowFlightModeRequest::enable() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.FollowFlightModeRequest.enable)
  return _internal_enable();
}
inline void FollowFlightModeRequest::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lights.FollowFlightModeRequest.enable)
}
inline bool FollowFlightModeRequest::_internal_enable() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enable_;
}
inline void FollowFlightModeRequest::_internal_set_enable(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enable_ = value;
}

// -------------------------------------------------------------------

// FollowFlightModeResponse

// .mavsdk.rpc.lights.LightsResult lights_result = 1;
inline bool FollowFlightModeResponse::has_lights_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lights_result_ != nullptr);
  return value;
}
inline void FollowFlightModeResponse::clear_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lights_result_ != nullptr) _impl_.lights_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lights::LightsResult& FollowFlightModeResponse::_internal_lights_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lights::LightsResult* p = _impl_.lights_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lights::LightsResult&>(::mavsdk::rpc::lights::_LightsResult_default_instance_);
}
inline const ::mavsdk::rpc::lights::LightsResult& FollowFlightModeResponse::lights_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.FollowFlightModeResponse.lights_result)
  return _internal_lights_result();
}
inline void FollowFlightModeResponse::unsafe_arena_set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lights_result_);
  }
  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lights.FollowFlightModeResponse.lights_result)
}
inline ::mavsdk::rpc::lights::LightsResult* FollowFlightModeResponse::release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* released = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lights::LightsResult* FollowFlightModeResponse::unsafe_arena_release_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.FollowFlightModeResponse.lights_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lights::LightsResult* temp = _impl_.lights_result_;
  _impl_.lights_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lights::LightsResult* FollowFlightModeResponse::_internal_mutable_lights_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lights_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lights::LightsResult>(GetArena());
    _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(p);
  }
  return _impl_.lights_result_;
}
inline ::mavsdk::rpc::lights::LightsResult* FollowFlightModeResponse::mutable_lights_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lights::LightsResult* _msg = _internal_mutable_lights_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.FollowFlightModeResponse.lights_result)
  return _msg;
}
inline void FollowFlightModeResponse::set_allocated_lights_result(::mavsdk::rpc::lights::LightsResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(_impl_.lights_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lights_result_ = reinterpret_cast<::mavsdk::rpc::lights::LightsResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.FollowFlightModeResponse.lights_result)
}

// -------------------------------------------------------------------

// LightsResult

// .mavsdk.rpc.lights.LightsResult.Result result = 1;
inline void LightsResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::lights::LightsResult_Result LightsResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.LightsResult.result)
  return _internal_result();
}
inline void LightsResult::set_result(::mavsdk::rpc::lights::LightsResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lights.LightsResult.result)
}
inline ::mavsdk::rpc::lights::LightsResult_Result LightsResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::lights::LightsResult_Result>(_impl_.result_);
}
inline void LightsResult::_internal_set_result(::mavsdk::rpc::lights::LightsResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void LightsResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& LightsResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.LightsResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightsResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lights.LightsResult.result_str)
}
inline std::string* LightsResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.LightsResult.result_str)
  return _s;
}
inline const std::string& LightsResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void LightsResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* LightsResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* LightsResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lights.LightsResult.result_str)
  return _impl_.result_str_.Release();
}
inline void LightsResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lights.LightsResult.result_str)
}

// -------------------------------------------------------------------

// LightStrip

// repeated uint32 lights = 1;
inline int LightStrip::_internal_lights_size() const {
  return _internal_lights().size();
}
inline int LightStrip::lights_size() const {
  return _internal_lights_size();
}
inline void LightStrip::clear_lights() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lights_.Clear();
}
inline ::uint32_t LightStrip::lights(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.LightStrip.lights)
  return _internal_lights().Get(index);
}
inline void LightStrip::set_lights(int index, ::uint32_t value) {
  _internal_mutable_lights()->Set(index, value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lights.LightStrip.lights)
}
inline void LightStrip::add_lights(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_lights()->Add(value);
  // @@protoc_insertion_point(field_add:mavsdk.rpc.lights.LightStrip.lights)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& LightStrip::lights() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.lights.LightStrip.lights)
  return _internal_lights();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* LightStrip::mutable_lights()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.lights.LightStrip.lights)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_lights();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& LightStrip::_internal_lights()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lights_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* LightStrip::_internal_mutable_lights() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.lights_;
}

// -------------------------------------------------------------------

// LightMatrix

// repeated .mavsdk.rpc.lights.LightStrip strips = 1;
inline int LightMatrix::_internal_strips_size() const {
  return _internal_strips().size();
}
inline int LightMatrix::strips_size() const {
  return _internal_strips_size();
}
inline void LightMatrix::clear_strips() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.strips_.Clear();
}
inline ::mavsdk::rpc::lights::LightStrip* LightMatrix::mutable_strips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lights.LightMatrix.strips)
  return _internal_mutable_strips()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>* LightMatrix::mutable_strips()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.lights.LightMatrix.strips)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_strips();
}
inline const ::mavsdk::rpc::lights::LightStrip& LightMatrix::strips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lights.LightMatrix.strips)
  return _internal_strips().Get(index);
}
inline ::mavsdk::rpc::lights::LightStrip* LightMatrix::add_strips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::mavsdk::rpc::lights::LightStrip* _add = _internal_mutable_strips()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.lights.LightMatrix.strips)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>& LightMatrix::strips() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.lights.LightMatrix.strips)
  return _internal_strips();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>&
LightMatrix::_internal_strips() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.strips_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::lights::LightStrip>*
LightMatrix::_internal_mutable_strips() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.strips_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lights
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::lights::LightsResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::lights::LightsResult_Result>() {
  return ::mavsdk::rpc::lights::LightsResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_lights_2flights_2eproto_2epb_2eh
